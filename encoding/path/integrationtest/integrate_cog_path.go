// DO NOT EDIT.
//
// File autogenerated by cog-path.

package integrationtest

import "github.com/thatguystone/cog/encoding/path"

func (v Basic) MarshalPath(e path.Encoder) path.Encoder {
	e = e.EmitInt32(v.A)
	e = e.EmitUint32(v.B)
	e = e.EmitString(v.C)
	e = e.EmitBool(v.D.E)
	e = e.EmitInt8(v.D.F)
	for i := 0; i < 2; i++ {
		e = e.EmitString(v.G[i].H)
		e = e.EmitBool(v.G[i].I)
	}
	e = (v.Hand).MarshalPath(e)
	return e
}

func (v *Basic) UnmarshalPath(d path.Decoder) path.Decoder {
	e = e.EmitStruct(&(v.A))
	e = e.EmitStruct(&(v.B))
	e = e.EmitStruct(&(v.C))
	e = e.EmitStruct(&(v.D.E))
	e = e.EmitStruct(&(v.D.F))
	for i := 0; d.Err == nil && i < 2; i++ {
		e = e.EmitStruct(&(v.G[i].H))
		e = e.EmitStruct(&(v.G[i].I))
	}
	if d.Err == nil {
		d = d.Unmarshal(&v.Hand)
	}
	return d
}

func (v Ptrs) MarshalPath(e path.Encoder) path.Encoder {
	e = e.EmitInt32(*v.A)
	e = e.EmitUint32(*v.B)
	e = e.EmitString(*v.C)
	e = e.EmitString(**v.D)
	e = e.EmitString(***v.E)
	e = e.EmitString((*v.F).G)
	e = e.EmitBool(*(*v.F).H)
	for i := 0; i < 2; i++ {
		e = e.EmitString(v.J[i].K)
		e = e.EmitBool(v.J[i].L)
	}
	for i := 0; i < 2; i++ {
		e = e.EmitString((*v.M[i]).N)
		e = e.EmitBool((*v.M[i]).O)
	}
	e = (v.Hand).MarshalPath(e)
	return e
}

func (v *Ptrs) UnmarshalPath(d path.Decoder) path.Decoder {
	e = e.EmitStruct(&(v.A))
	e = e.EmitStruct(&(v.B))
	e = e.EmitStruct(&(v.C))
	e = e.EmitStruct(&(v.D))
	e = e.EmitStruct(&(v.E))
	e = e.EmitStruct(&((*v.F).G))
	e = e.EmitStruct(&((*v.F).H))
	for i := 0; d.Err == nil && i < 2; i++ {
		e = e.EmitStruct(&(v.J[i].K))
		e = e.EmitStruct(&(v.J[i].L))
	}
	for i := 0; d.Err == nil && i < 2; i++ {
		e = e.EmitStruct(&((*v.M[i]).N))
		e = e.EmitStruct(&((*v.M[i]).O))
	}
	if d.Err == nil {
		d = (v.Hand).UnmarshalPath(d)
	}
	return d
}
